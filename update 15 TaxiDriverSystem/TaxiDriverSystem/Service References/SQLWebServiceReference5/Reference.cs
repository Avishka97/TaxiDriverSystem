//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaxiDriverSystem.SQLWebServiceReference5 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SQLWebServiceReference5.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertStartDay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertStartDay(string date, int DID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertStartDay", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InsertStartDayAsync(string date, int DID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertEndDay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertEndDay(string date, int DID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertEndDay", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InsertEndDayAsync(string date, int DID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertJourneyStart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertJourneyStart(string date, int DID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertJourneyStart", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InsertJourneyStartAsync(string date, int DID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertJourneyEnd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertJourneyEnd(string date, int DID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertJourneyEnd", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InsertJourneyEndAsync(string date, int DID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JourneyID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int JourneyID(string date, int D_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JourneyID", ReplyAction="*")]
        System.Threading.Tasks.Task<int> JourneyIDAsync(string date, int D_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/driverstartdaycheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string driverstartdaycheck(int D_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/driverstartdaycheck", ReplyAction="*")]
        System.Threading.Tasks.Task<string> driverstartdaycheckAsync(int D_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/driverLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string driverLogin(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/driverLogin", ReplyAction="*")]
        System.Threading.Tasks.Task<string> driverLoginAsync(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DriverID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DriverID(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DriverID", ReplyAction="*")]
        System.Threading.Tasks.Task<int> DriverIDAsync(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HoursWord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable HoursWord(int D_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HoursWord", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> HoursWordAsync(int D_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HoursWorkPredict", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable HoursWorkPredict(int D_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HoursWorkPredict", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> HoursWorkPredictAsync(int D_ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : TaxiDriverSystem.SQLWebServiceReference5.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<TaxiDriverSystem.SQLWebServiceReference5.WebService1Soap>, TaxiDriverSystem.SQLWebServiceReference5.WebService1Soap {
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public string InsertStartDay(string date, int DID) {
            return base.Channel.InsertStartDay(date, DID);
        }
        
        public System.Threading.Tasks.Task<string> InsertStartDayAsync(string date, int DID) {
            return base.Channel.InsertStartDayAsync(date, DID);
        }
        
        public string InsertEndDay(string date, int DID) {
            return base.Channel.InsertEndDay(date, DID);
        }
        
        public System.Threading.Tasks.Task<string> InsertEndDayAsync(string date, int DID) {
            return base.Channel.InsertEndDayAsync(date, DID);
        }
        
        public string InsertJourneyStart(string date, int DID) {
            return base.Channel.InsertJourneyStart(date, DID);
        }
        
        public System.Threading.Tasks.Task<string> InsertJourneyStartAsync(string date, int DID) {
            return base.Channel.InsertJourneyStartAsync(date, DID);
        }
        
        public string InsertJourneyEnd(string date, int DID) {
            return base.Channel.InsertJourneyEnd(date, DID);
        }
        
        public System.Threading.Tasks.Task<string> InsertJourneyEndAsync(string date, int DID) {
            return base.Channel.InsertJourneyEndAsync(date, DID);
        }
        
        public int JourneyID(string date, int D_ID) {
            return base.Channel.JourneyID(date, D_ID);
        }
        
        public System.Threading.Tasks.Task<int> JourneyIDAsync(string date, int D_ID) {
            return base.Channel.JourneyIDAsync(date, D_ID);
        }
        
        public string driverstartdaycheck(int D_ID) {
            return base.Channel.driverstartdaycheck(D_ID);
        }
        
        public System.Threading.Tasks.Task<string> driverstartdaycheckAsync(int D_ID) {
            return base.Channel.driverstartdaycheckAsync(D_ID);
        }
        
        public string driverLogin(string Username, string Password) {
            return base.Channel.driverLogin(Username, Password);
        }
        
        public System.Threading.Tasks.Task<string> driverLoginAsync(string Username, string Password) {
            return base.Channel.driverLoginAsync(Username, Password);
        }
        
        public int DriverID(string Username, string Password) {
            return base.Channel.DriverID(Username, Password);
        }
        
        public System.Threading.Tasks.Task<int> DriverIDAsync(string Username, string Password) {
            return base.Channel.DriverIDAsync(Username, Password);
        }
        
        public System.Data.DataTable HoursWord(int D_ID) {
            return base.Channel.HoursWord(D_ID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> HoursWordAsync(int D_ID) {
            return base.Channel.HoursWordAsync(D_ID);
        }
        
        public System.Data.DataTable HoursWorkPredict(int D_ID) {
            return base.Channel.HoursWorkPredict(D_ID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> HoursWorkPredictAsync(int D_ID) {
            return base.Channel.HoursWorkPredictAsync(D_ID);
        }
    }
}
